apply plugin: 'com.android.application'

Properties signingProperties = new Properties()
signingProperties.load(new FileInputStream(file("../signings/signing.properties")))

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId 'com.robot.tuling'
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 4
        versionName '1.5.0'
        manifestPlaceholders = [umengHolder: "Tuling"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file(signingProperties['KEYSTORE_FILEPATH'])
            storePassword signingProperties['STORE_PASSWORD']
            keyAlias signingProperties['KEY_ALIAS']
            keyPassword signingProperties['KEY_PASSWORD']
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "debugMode", "false"
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> generateApk(variant)
            }
        }

        debug {
            buildConfigField "boolean", "debugMode", "true"
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant -> generateApk(variant)
            }
        }
    }

    flavorDimensions "type"

    productFlavors {
        fir {
            manifestPlaceholders = [umengHolder: "fir"]
            dimension "type"
        }
        xiaomi {
            manifestPlaceholders = [umengHolder: "xiaomi"]
            dimension "type"
        }
        "360" {
            manifestPlaceholders = [umengHolder: "360"]
            dimension "type"
        }
        baidu {
            manifestPlaceholders = [umengHolder: "baidu"]
            dimension "type"
        }
    }
}

def generateApk(variant) {
    if (variant.buildType.name == "release") {
        variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/app/outputs")
        variant.getPackageApplication().outputScope.apkDatas.forEach { apkData ->
            apkData.outputFileName = "Tuling_${variant.buildType.name}_${variant.versionName}_${variant.productFlavors[0].name}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:support-v13:27.0.2'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.orhanobut:logger:2.1.1'
    implementation 'com.afollestad.material-dialogs:core:0.9.4.4'

    implementation 'de.hdodenhof:circleimageview:2.1.0'
    implementation 'com.lguipeng.bubbleview:library:1.0.0'

    implementation 'de.devland.esperandro:esperandro-api:2.2.0'
    annotationProcessor 'de.devland.esperandro:esperandro:2.2.0'

    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'com.umeng.analytics:analytics:6.1.0'
    implementation 'com.sunfusheng:FirUpdater:1.0.7'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.3'
    implementation 'com.squareup.okhttp3:okhttp:3.0.1'

    implementation 'org.tensorflow:tensorflow-android:+'

    implementation 'com.github.f0ris.sweetalert:library:1.5.1'


    implementation project(":opencv")
}
